import java.util.ArrayList;
import java.util.List;

//1 zadanie
class Box<T>{   //Klasa generyczna, przechowuje objekt T
    T objekt;

    public void setObjekt(T obiekt){
        this.objekt = obiekt;
    }

    public T getObjekt(){
        return objekt;
    }
}

//3
class Counter<T>{
    List<T> lista;

    public Counter(){
        lista = new ArrayList<T>();
    }
    public void add(T objekt){
        lista.add(objekt);
    }

    public int getCount(){
        return lista.size();
    }
}

//21

class Animal{
    int wiek;

    public Animal(int wiek){
        this.wiek = wiek;
    }

    public int getWiek(){
        return wiek;
    }

    @Override
    public String toString(){
        return "Animal [" + "wiek: " + wiek + ']';
    }
}

class Dog extends Animal{
    String rasa;

    public Dog(String rasa, int wiek){
        super(wiek);
        this.rasa = rasa;
    }

    @Override
    public String toString() {
        return "Dog [Rasa: " + rasa + ", Wiek: " + wiek + "]";
    }
}

public class Main {

    //2
    public static <T> boolean isEqual(T obj1, T obj2){
        return obj1.equals(obj2);
    }

    //21
    public static <T extends Animal> T findMax(T element1, T element2){
        return (element1.getWiek() > element2.getWiek()) ? element1 : element2;
    }

    public static void main(String[] args) {

        //1
        Box<String> box1 = new Box<>();
        Box<Integer> box2 = new Box<>();
        Box<Double> box3 = new Box<>();

        box1.setObjekt("slowo");
        System.out.println(box1.getObjekt());

        box2.setObjekt(10);
        System.out.println(box2.getObjekt());

        box3.setObjekt(3.14);
        System.out.println(box3.getObjekt());

        //2
        System.out.println(isEqual(box1.getObjekt(), box2.getObjekt()));
        System.out.println(isEqual(box1.getObjekt(), box3.getObjekt()));

        //3
        Counter<String> stringCounter = new Counter<>();
        stringCounter.add(box1.getObjekt());
        stringCounter.add("slowo2");
        stringCounter.add("slowo3");
        System.out.println(stringCounter.getCount());

        //21
        Dog dog1 = new Dog("Jamnik", 7);
        Dog dog2 = new Dog("Owczarek", 5);

        Dog olderDog = findMax(dog1, dog2);
        System.out.println("Najstarszy pies: " + olderDog);

        Animal animal3 = new Animal(11);
        Animal animal4 = new Animal(12);

        Animal olderAnimal = findMax(animal3, animal4);
        System.out.println("Starszy zwierzak: " + olderAnimal);
    }
}
